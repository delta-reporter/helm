{{- if .Values.deployment.db.localDatabase -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    service: delta-db
  name: delta-db
spec:
  replicas: 1
  selector:
    matchLabels:
      service: delta-db
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: delta-db
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: {{ .Values.deployment.db.postgresDb }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.deployment.db.postgresPassword | quote }}
        - name: POSTGRES_USER
          value: {{ .Values.deployment.db.postgresUser }}
        - name: PGDATA
          value: {{ .Values.deployment.db.pgdata }}
        image: {{ .Values.deployment.db.image }}
        imagePullPolicy: ""
        name: delta-database
        ports:
        - containerPort: {{ .Values.deployment.db.port }}
        resources: {}
        volumeMounts:
        - mountPath: {{ .Values.deployment.db.dataMountPath }}
          name: db-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: db-claim0
        persistentVolumeClaim:
          claimName: db-claim0
status: {}
{{- end -}}
---
{{- if .Values.deployment.db.localDatabase -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    service: db-claim0
  name: db-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.deployment.db.dataStorage }}
status: {}
{{- end -}}
---
{{- if .Values.deployment.db.localDatabase -}}
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: delta-db
  name: delta-db
spec:
  ports:
  - name: {{ .Values.service.db.port | quote }}
    port: {{ .Values.service.db.port }}
    targetPort: {{ .Values.service.db.port }}
  selector:
    service: delta-db
status:
  loadBalancer: {}
{{- end -}}
